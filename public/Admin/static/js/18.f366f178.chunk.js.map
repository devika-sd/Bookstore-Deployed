{"version":3,"sources":["Admin-part2/Booklist/ViewBook.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","padding","spacing","connect","state","books","bookReducer","authenticated","authReducer","currentuser","userReducer","currentUser","message","dispatch","onUpdate","title","bookData","bookactions","onGetBooks","props","console","log","location","order","id","useParams","history","useHistory","classes","_useState","useState","modalStyle","Object","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState3","_useState4","open","setOpen","_useState5","orderid","_useState6","setTitle","_useState7","_useState8","titleTemp","setTitleTemp","_useState9","_useState10","authors","setAuthors","_useState11","Date","_useState12","publishDate","setPublishDate","_useState13","_useState14","isbn","setIsbn","_useState15","_useState16","price","setPrice","_useState17","_useState18","discount","setDiscount","_useState19","_useState20","category","setCategory","_useState21","_useState22","available","setAvailable","_useState23","_useState24","_useState25","_useState26","setNotify","_useState27","_useState28","enable","setEnable","_useState29","_useState30","setTitleError","_useState31","_useState32","setIsbnError","_useState33","_useState34","setCategoryError","_useState35","_useState36","setAuthorsError","_useState37","_useState38","setPriceError","_useState39","_useState40","setDiscountError","_useState41","_useState42","setAvailableError","_useState43","_useState44","_useState45","_useState46","titleErrorMsg","setTitleErrorMsg","_useState47","_useState48","isbnErrorMsg","setIsbnErrorMsg","_useState49","_useState50","categoryErrorMsg","setCategoryErrorMsg","_useState51","_useState52","authorsErrorMsg","setAuthorsErrorMsg","_useState53","_useState54","priceErrorMsg","setPriceErrorMsg","_useState55","_useState56","discountErrorMsg","setDiscountErrorMsg","_useState57","_useState58","availableErrorMsg","setAvailableErrorMsg","_useState59","_useState60","publishDateErrorMsg","handleClose","push","useEffect","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","publishedDate","wrap","_context","prev","next","toLocaleDateString","stop","update","_ref2","_callee2","event","_context2","_x","apply","this","arguments","onTitleChange","titleValue","target","value","RegExp","test","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_Modal__WEBPACK_IMPORTED_MODULE_4__","aria-labelledby","aria-describedby","style","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","margin","boxSizing","border","fontFamily","display","Header","float","fontSize","onClick","Title","as","Body","Text","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","md","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","Group","controlId","Label","Control","type","onChange","placeholder","length","map","data","authorsValue","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","variant"],"mappings":"mQAgBA,SAASA,IACL,MAAO,CACHC,IAAG,MACHC,KAAI,MACJC,UAAS,yBAGjB,IAAMC,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,SAAU,WACVC,MAAO,SACPC,QAASJ,EAAMK,QAAQ,EAAG,EAAG,OA6WtBC,sBAlBS,SAACC,GACrB,MAAO,CACHC,MAAOD,EAAME,YAAYD,MACzBE,cAAeH,EAAMI,YAAYD,cACjCE,YAAYL,EAAMM,YAAYC,YAC9BC,QAAQR,EAAME,YAAYM,UAIP,SAACC,GACxB,MAAO,CACHC,SAAU,SAACC,EAAOC,GAAR,OAAqBH,EAASI,IAAwBF,EAAOC,KACvEE,WAAY,kBAAML,EAASI,UAMpBd,CAvWf,SAAkBgB,GACdC,QAAQC,IAAIF,EAAMG,SAASC,OADN,IAEfC,EAAOC,cAAPD,GACAE,EAAUC,cACVC,EAAUjC,IAJKkC,EAKFC,mBAASvC,GAAvBwC,EALgBC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAK,EAMCJ,oBAAS,GANVK,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAMhBE,EANgBD,EAAA,GAMVE,EANUF,EAAA,GAAAG,GAOHb,cAAZc,QACoBT,mBAAS,KARdU,EAAAR,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAQdvB,EARcyB,EAAA,GAQPC,EAROD,EAAA,GAAAE,EASaZ,mBAAS,IATtBa,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GASdE,EATcD,EAAA,GASHE,EATGF,EAAA,GAAAG,EAUShB,mBAAS,IAVlBiB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAUdE,EAVcD,EAAA,GAULE,EAVKF,EAAA,GAAAG,GAWP,IAAIC,KACoBrB,mBAAS,KAZ1BsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAYdG,EAZcD,EAAA,GAYDE,EAZCF,EAAA,GAAAG,EAaGzB,mBAAS,IAbZ0B,EAAAxB,OAAAC,EAAA,EAAAD,CAAAuB,EAAA,GAadE,EAbcD,EAAA,GAaRE,EAbQF,EAAA,GAAAG,EAcK7B,mBAAS,IAdd8B,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAcdE,EAdcD,EAAA,GAcPE,EAdOF,EAAA,GAAAG,EAeWjC,mBAAS,IAfpBkC,EAAAhC,OAAAC,EAAA,EAAAD,CAAA+B,EAAA,GAedE,EAfcD,EAAA,GAeJE,EAfIF,EAAA,GAAAG,EAgBWrC,mBAAS,IAhBpBsC,EAAApC,OAAAC,EAAA,EAAAD,CAAAmC,EAAA,GAgBdE,GAhBcD,EAAA,GAgBJE,GAhBIF,EAAA,GAAAG,GAiBazC,mBAAS,IAjBtB0C,GAAAxC,OAAAC,EAAA,EAAAD,CAAAuC,GAAA,GAiBdE,GAjBcD,GAAA,GAiBHE,GAjBGF,GAAA,GAAAG,GAkBO7C,mBAAS,OAlBhB8C,GAAA5C,OAAAC,EAAA,EAAAD,CAAA2C,GAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GAmBM9C,oBAAS,IAnBfgD,GAAA9C,OAAAC,EAAA,EAAAD,CAAA6C,GAAA,GAmBPE,IAnBOD,GAAA,GAAAA,GAAA,IAAAE,GAqBOlD,oBAAS,GArBhBmD,GAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,GAAA,GAqBdE,GArBcD,GAAA,GAqBNE,GArBMF,GAAA,GAAAG,GAsBetD,oBAAS,GAtBxBuD,GAAArD,OAAAC,EAAA,EAAAD,CAAAoD,GAAA,GAsBFE,IAtBED,GAAA,GAAAA,GAAA,IAAAE,GAuBazD,oBAAS,GAvBtB0D,GAAAxD,OAAAC,EAAA,EAAAD,CAAAuD,GAAA,GAuBHE,IAvBGD,GAAA,GAAAA,GAAA,IAAAE,GAwBqB5D,oBAAS,GAxB9B6D,GAAA3D,OAAAC,EAAA,EAAAD,CAAA0D,GAAA,GAwBCE,IAxBDD,GAAA,GAAAA,GAAA,IAAAE,GAyBmB/D,oBAAS,GAzB5BgE,GAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,GAAA,GAyBAE,IAzBAD,GAAA,GAAAA,GAAA,IAAAE,GA0BelE,oBAAS,GA1BxBmE,GAAAjE,OAAAC,EAAA,EAAAD,CAAAgE,GAAA,GA0BFE,IA1BED,GAAA,GAAAA,GAAA,IAAAE,GA2BqBrE,oBAAS,GA3B9BsE,GAAApE,OAAAC,EAAA,EAAAD,CAAAmE,GAAA,GA2BCE,IA3BDD,GAAA,GAAAA,GAAA,IAAAE,GA4BuBxE,oBAAS,GA5BhCyE,GAAAvE,OAAAC,EAAA,EAAAD,CAAAsE,GAAA,GA4BEE,IA5BFD,GAAA,GAAAA,GAAA,IAAAE,GA6B2B3E,oBAAS,GA7BpC4E,GAAA1E,OAAAC,EAAA,EAAAD,CAAAyE,GAAA,GAAAE,IAAAD,GAAA,GAAAA,GAAA,GA8BqB5E,mBAAS,KA9B9B8E,GAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,GAAA,GA8BdE,GA9BcD,GAAA,GA8BCE,GA9BDF,GAAA,GAAAG,GA+BmBjF,mBAAS,IA/B5BkF,GAAAhF,OAAAC,EAAA,EAAAD,CAAA+E,GAAA,GA+BdE,GA/BcD,GAAA,GA+BAE,GA/BAF,GAAA,GAAAG,GAgC2BrF,mBAAS,IAhCpCsF,GAAApF,OAAAC,EAAA,EAAAD,CAAAmF,GAAA,GAgCdE,GAhCcD,GAAA,GAgCIE,GAhCJF,GAAA,GAAAG,GAiCyBzF,mBAAS,IAjClC0F,GAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,GAAA,GAiCdE,GAjCcD,GAAA,GAiCGE,GAjCHF,GAAA,GAAAG,GAkCqB7F,mBAAS,IAlC9B8F,GAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,GAAA,GAkCdE,GAlCcD,GAAA,GAkCCE,GAlCDF,GAAA,GAAAG,GAmC2BjG,mBAAS,IAnCpCkG,GAAAhG,OAAAC,EAAA,EAAAD,CAAA+F,GAAA,GAmCdE,GAnCcD,GAAA,GAmCIE,GAnCJF,GAAA,GAAAG,GAoC6BrG,mBAAS,IApCtCsG,GAAApG,OAAAC,EAAA,EAAAD,CAAAmG,GAAA,GAoCdE,GApCcD,GAAA,GAoCKE,GApCLF,GAAA,GAAAG,GAqCiCzG,mBAAS,IArC1C0G,GAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,GAAA,GAqCdE,GArCcD,GAAA,GA4CfE,IA5CeF,GAAA,GA4CD,WAChBnG,GAAQ,GACR0C,IAAU,GACVrD,EAAQiH,KAAK,eAQjBC,oBAAU,WACN5G,OAAA6G,EAAA,EAAA7G,CAAA8G,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSnI,EAAMD,aADf,OAMGuB,EAAStB,EAAMd,MAAMmB,GAAIT,OACzB8B,EAAa1B,EAAMd,MAAMmB,GAAIT,OAC7BuD,GAAYnD,EAAMd,MAAMmB,GAAI6C,UAC5BX,EAAQvC,EAAMd,MAAMmB,GAAIiC,MACxBK,EAAS3C,EAAMd,MAAMmB,GAAIqC,OACzBK,EAAY/C,EAAMd,MAAMmB,GAAIyC,UAC5BS,GAAavD,EAAMd,MAAMmB,GAAIiD,WAEzByE,EAAgB,IAAI/F,KAAKhC,EAAMd,MAAMmB,GAAI6B,aAC7CC,EAAe4F,EAAcK,sBAC7BtG,EAAW9B,EAAMd,MAAMmB,GAAIwB,SAhB9B,yBAAAoG,EAAAI,SAAAP,KAADjH,IAuBD,CAACR,EAAGA,IACP,IACMiI,GAAM,eAAAC,EAAA1H,OAAA6G,EAAA,EAAA7G,CAAA8G,EAAAC,EAAAC,KAAG,SAAAW,EAAOC,GAAP,IAAA5I,EAAA,OAAA8H,EAAAC,EAAAI,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,OACXvE,IAAU,GAEN/D,EAAW,CAAED,QAAOsD,YAAUrB,UAASS,OAAMI,QAAOI,WAAUQ,aAAWpB,eAC5D,OAAdT,EACHzB,EAAML,SAASC,EAAOC,GAElBG,EAAML,SAAS8B,EAAW5B,GAE9BmE,IAAU,GATC,wBAAA0E,EAAAL,SAAAG,MAAH,gBAAAG,GAAA,OAAAJ,EAAAK,MAAAC,KAAAC,YAAA,GA0BNC,GAAgB,SAACN,GACnB,IAAIO,EAAcP,EAAMQ,OAAOC,MACZ,IAAIC,OAAO,mBAEbC,KAAKJ,IAOlB1H,EAAS0H,GACT7E,IAAc,GACdwB,GAAiB,MARjBrE,EAAS0H,GACT7E,IAAc,GAEdwB,GAAiB,qCA6GzB,OACI0D,EAAAzB,EAAA0B,cAAA,WAOID,EAAAzB,EAAA0B,cAACC,EAAA,EAAD,CACItI,KAAMA,EACNuI,kBAAgB,qBAChBC,mBAAiB,4BAEjBJ,EAAAzB,EAAA0B,cAAA,OAAKI,MAAO9I,EAAY+I,UAAWlJ,EAAQ9B,MAAM,eAC7C0K,EAAAzB,EAAA0B,cAACM,EAAA,EAAD,CAAMD,UAAU,sBAAsBD,MAAO,CACzC5K,QAAS,YACT+K,OAAQ,YACRC,UAAW,aACXC,OAAQ,OACRlL,MAAO,MACPmL,WAAY,YACZC,QAAS,UAGTZ,EAAAzB,EAAA0B,cAACM,EAAA,EAAKM,OAAN,KACIb,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,cAAcD,MAAO,CAAES,MAAO,QAASC,SAAU,QAAUC,QAtM7E,WACf9C,QAsMoB8B,EAAAzB,EAAA0B,cAACM,EAAA,EAAKU,MAAN,CAAYC,GAAG,MACXlB,EAAAzB,EAAA0B,cAAA,4BAIRD,EAAAzB,EAAA0B,cAACM,EAAA,EAAKY,KAAN,KACInB,EAAAzB,EAAA0B,cAACM,EAAA,EAAKa,KAAN,KAGK1G,IACGsF,EAAAzB,EAAA0B,cAACoB,EAAA,EAAD,KACIrB,EAAAzB,EAAA0B,cAACqB,EAAA,EAAD,CAAKC,GAAI,GACLvB,EAAAzB,EAAA0B,cAACuB,EAAA,EAAD,KACIxB,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,cACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOhC,MAAOtJ,EAAOuL,SAAUpC,GAAeqC,YAAY,gBAC7E/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BjE,KAE3C2D,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAElB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAAShC,MAAOzH,EAAW0J,SAAUpC,GAAeqC,YAAY,iBAEvF/B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,aACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAAShC,MAAO5G,EAAM6I,SApHpE,SAAC1C,GAClB,IAAIS,EAAST,EAAMQ,OAAOC,MAEtBA,EAAMmC,OAAQ,IAAMnC,EAAMmC,OAAO,IACjC9I,EAAQ2G,GACR5E,IAAa,GACbyB,GAAgB,gDAGhBxD,EAAQ2G,GACR5E,IAAa,GACbyB,GAAgB,MAyGyFqF,YAAY,eAC7E/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0B7D,KAE3CuD,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,cACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAAShC,MAAOxG,EAAOyI,SAzGpE,SAAC1C,GACnB,IAAIS,EAAST,EAAMQ,OAAOC,MAEtBA,GAAO,GACPvG,EAASuG,GACTnE,IAAc,GACd4B,GAAiB,oCAGjBhE,EAASuG,GACTnE,IAAc,GACd4B,GAAiB,MA8F0FyE,YAAY,gBAC/E/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BjD,KAE3C2C,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,qBACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOhC,MAAOhH,EAAckJ,YAAY,uBAC3D/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BrC,OAMnD+B,EAAAzB,EAAA0B,cAACqB,EAAA,EAAD,CAAKC,GAAI,GAETvB,EAAAzB,EAAA0B,cAACuB,EAAA,EAAD,KACQxB,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,gBACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcE,SA3KrC,SAAC1C,GACtB,IAAIS,EAAST,EAAMQ,OAAOC,MAEd,KAARA,GACA/F,GAAY+F,GACZzE,IAAiB,GACjB0B,GAAoB,mCAGpBhD,GAAY+F,GACZzE,IAAiB,GACjB0B,GAAoB,MAgK8D+C,MAAOhG,GAAUqH,GAAG,SAASa,YAAY,mBACnF/B,EAAAzB,EAAA0B,cAAA,iCAnQ9B,CAAC,SAAU,SAAU,aAAc,UAAW,UAAW,iBAAkB,WAAY,WAAY,WAoQzDgC,IAAI,SAAAC,GAAI,OAChBlC,EAAAzB,EAAA0B,cAAA,UAAQ1J,MAAO2L,GAAOA,MAG1BlC,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BzD,KAG3CmD,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,oBACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOhC,MAAOrH,EAASsJ,SAtKlE,SAAC1C,GACrB,IAAI+C,EAAgB/C,EAAMQ,OAAOC,MACd,IAAIC,OAAO,mBAEbC,KAAKoC,IAMlB1J,EAAW0J,GACX5G,IAAgB,GAEhB2B,GAAmB,MARnBzE,EAAW0J,GACX5G,IAAgB,GAChB2B,GAAmB,sCA+J0F6E,YAAY,sBACjF/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BrD,KAE3C+C,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,iBACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAAShC,MAAOpG,EAAUqI,SAzGpE,SAAC1C,GACtB,IAAIS,EAAST,EAAMQ,OAAOC,MAEtBA,EAAM,GAAKA,EAAQ,IACnBnG,EAAYmG,GACZhE,IAAiB,GACjB6B,GAAoB,qCAGpBhE,EAAYmG,GACZhE,IAAiB,GACjB6B,GAAoB,MA8F6FqE,YAAY,mBACrF/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0B7C,KAE3CuC,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB1B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKG,MAAN,wBACA3B,EAAAzB,EAAA0B,cAACuB,EAAA,EAAKI,QAAN,CAAcC,KAAK,SAAShC,MAAO5F,GAAW6H,SA9HpE,SAAC1C,GACvB,IAAIS,EAAST,EAAMQ,OAAOC,MAEtBA,EAAM,GACN3F,GAAa2F,GACb7D,IAAkB,GAClB8B,GAAqB,8CAGrB5D,GAAa2F,GACb7D,IAAkB,GAClB8B,GAAqB,MAmH8FiE,YAAY,0BACvF/B,EAAAzB,EAAA0B,cAAA,KAAGK,UAAU,0BAA0BzC,OAOnDmC,EAAAzB,EAAA0B,cAACmC,EAAA,EAAD,CAAS/B,MAAO,CAAE7K,MAAO,OAAQgL,OAAQ,QAAUQ,QAAS/B,GAAQoD,QAAQ,WAA5E","file":"static/js/18.f366f178.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\nimport { Table } from 'react-bootstrap'\nimport { useParams } from \"react-router-dom\"\nimport { connect } from 'react-redux';\nimport Notification from '../../Admin-part1/Notification/Notification';\nimport { useHistory } from \"react-router\";\n\nimport Aux from \"../../hoc/_Aux\";\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\n\nimport * as bookactions from '../../Actions/book-action';\n\n\nfunction getModalStyle() {\n    return {\n        top: `50%`,\n        left: `50%`,\n        transform: `translate(-50%, -50%)`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: '1000px',\n        padding: theme.spacing(2, 4, 3)\n    },\n}));\n\n\n\nfunction ViewBook(props) {\n    console.log(props.location.order);\n    let { id } = useParams();\n    const history = useHistory();\n    const classes = useStyles();\n    var [modalStyle] = useState(getModalStyle);\n    var [open, setOpen] = useState(true);\n    let { orderid } = useParams();\n    const [title, setTitle] = useState('');\n    const [titleTemp, setTitleTemp] = useState('');\n    const [authors, setAuthors] = useState('');\n    let newdate = new Date();\n    const [publishDate, setPublishDate] = useState('');\n    const [isbn, setIsbn] = useState('');\n    const [price, setPrice] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [category, setCategory] = useState('');\n    const [available, setAvailable] = useState('');\n    const [status, setStatus] = useState(\"new\");\n    const [notify,setNotify] = useState(false);\n\n    const [enable, setEnable] = useState(true)\n    const [titleError, setTitleError] = useState(true)\n    const [isbnError, setIsbnError] = useState(true)\n    const [categoryError, setCategoryError] = useState(true)\n    const [authorsError, setAuthorsError] = useState(true)\n    const [priceError, setPriceError] = useState(true)\n    const [discountError, setDiscountError] = useState(true)\n    const [availableError, setAvailableError] = useState(true)\n    const [publishDateError, setPublishdateError] = useState(true)\n    const [titleErrorMsg, setTitleErrorMsg] = useState('')\n    const [isbnErrorMsg, setIsbnErrorMsg] = useState('')\n    const [categoryErrorMsg, setCategoryErrorMsg] = useState('')\n    const [authorsErrorMsg, setAuthorsErrorMsg] = useState('')\n    const [priceErrorMsg, setPriceErrorMsg] = useState('')\n    const [discountErrorMsg, setDiscountErrorMsg] = useState('')\n    const [availableErrorMsg, setAvailableErrorMsg] = useState('')\n    const [publishDateErrorMsg, setPublishdateErrorMsg] = useState('')\n    const categories= [\"horror\", \"comedy\", \"adeventure\", \"fiction\", \"ancient\", \"sciencefiction\", \"thriller\", \"spritual\", \"classic\" ]\n   \n\n    const handleopen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n        setNotify(false);\n        history.push('/showbook');\n\n    }\n\n    const checkClose = () => {\n        handleClose();\n    }\n   \n    useEffect(() => {\n        (async () => {\n            await props.onGetBooks();\n           \n           // let date = new Date(props.books[0].publishDate);\n//date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n         //   console.log(\"jjjj \"+date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate())\n            setTitle(props.books[id].title)\n            setTitleTemp(props.books[id].title)\n            setCategory(props.books[id].category)\n            setIsbn(props.books[id].isbn)\n            setPrice(props.books[id].price)\n            setDiscount(props.books[id].discount)\n            setAvailable(props.books[id].available)\n           // var d = new Date(date.getFullYear(), (date.getMonth()+1), date.getDate());\n            var publishedDate = new Date(props.books[id].publishDate)\n            setPublishDate(publishedDate.toLocaleDateString())\n            setAuthors(props.books[id].authors)\n            \n        })();\n\n\n\n       \n    }, [id,id])\n    var check = true;\n    const update = async (event) => {\n        setNotify(true);\n   \n        let bookData = { title, category, authors, isbn, price, discount, available, publishDate}\n        if(titleTemp === null){\n        props.onUpdate(title, bookData)\n        } else{\n            props.onUpdate(titleTemp, bookData)\n        }\n        setEnable(true)\n    }\n\n    const Edit = (event) => {\n        console.log('Edit')\n        setEnable(false)\n    }\n    const cancel = (event) =>{\n        console.log('cancel')\n        setEnable(true)\n        handleClose();\n    }\n\n    const onChangeRadio = (e) => {\n        console.log(e.target.value);\n        setStatus(e.target.value);\n    }\n    const onTitleChange = (event) => {\n        var titleValue = (event.target.value)\n        const expression = new RegExp('[a-zA-Z\\s]{2,20}')\n        \n        if (!(expression.test(titleValue))) {\n            setTitle(titleValue)\n            setTitleError(false)\n    \n            setTitleErrorMsg('please enter a valid book title');\n        }\n        else {\n            setTitle(titleValue)\n            setTitleError(true)\n            setTitleErrorMsg('');\n            check = false;\n        }\n    }\n\n    const onCategoryChange = (event) => {\n        var value = (event.target.value)\n         \n        if (value===\"\") {\n            setCategory(value)\n            setCategoryError(false)\n            setCategoryErrorMsg('please enter a valid category');\n        }\n        else {\n            setCategory(value)\n            setCategoryError(true)\n            setCategoryErrorMsg('');\n            check = false;\n        }\n    }\n\n    const onAuthorsChange = (event) => {\n        var authorsValue = (event.target.value)\n        const expression = new RegExp('[a-zA-Z\\s]{4,20}')\n        \n        if (!(expression.test(authorsValue))) {\n            setAuthors(authorsValue)\n            setAuthorsError(false)\n            setAuthorsErrorMsg('please enter a valid author name')\n        }\n        else {\n            setAuthors(authorsValue)\n            setAuthorsError(true)\n            check = false;\n            setAuthorsErrorMsg('')\n        }\n    }\n\n    const onIsbnChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value.length >13 || value.length<10) {\n            setIsbn(value)\n            setIsbnError(false)\n            setIsbnErrorMsg('isbn number should be 10 to 13 digits long')\n        }\n        else {\n            setIsbn(value)\n            setIsbnError(true)\n            setIsbnErrorMsg('')\n            check = false;\n        }\n    }\n\n    const onPriceChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<=0) {\n            setPrice(value)\n            setPriceError(false)\n            setPriceErrorMsg('Price should be greater than 0')\n        }\n        else {\n            setPrice(value)\n            setPriceError(true)\n            setPriceErrorMsg('')\n            check = false;\n        }\n    }\n\n    \n    const onAvailableChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<0) {\n            setAvailable(value)\n            setAvailableError(false)\n            setAvailableErrorMsg('Availability should be a positive number')\n        }\n        else {\n            setAvailable(value)\n            setAvailableError(true)\n            setAvailableErrorMsg('')\n            check = false;\n        }\n    }\n\n    const onDiscountChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<0 || value > 50) {\n            setDiscount(value)\n            setDiscountError(false)\n            setDiscountErrorMsg('Discount should be less than 50')\n        }\n        else {\n            setDiscount(value)\n            setDiscountError(true)\n            setDiscountErrorMsg('')\n            check = false;\n        }\n    }\n   \n        \n    return (\n        <div>\n            {/* {props.message.includes('updated')&&notify ? <Notification open={true} variant='success' msg={props.message}/> : null} */}\n            \n            {/* {props.message.includes('Book details not updated') ? <Notification open={true} variant='error' msg={props.message}/> : null}\n                 {props.message.includes('Book details updated successfully') ? <Notification open={true} variant=\"success\" msg={props.message}/> : null}\n                 {props.message.includes('authors') ? <Notification open={true} variant=\"success\" msg={\"Author Name should be at least 4 Character Long\"}/> : null}\n              */}\n            <Modal\n                open={open}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <div style={modalStyle} className={classes.paper+' ordermodel'}>\n                    <Card className=\"border border-muted\" style={{\n                        padding: '10px 15px',\n                        margin: '15px auto',\n                        boxSizing: 'border-box',\n                        border: 'none',\n                        width: '90%',\n                        fontFamily: 'monospace',\n                        display: 'block'\n                    }}>\n\n                        <Card.Header>\n                            <i className=\"fa fa-times\" style={{ float: 'right', fontSize: '20px' }} onClick={checkClose}></i>\n                            <Card.Title as=\"h5\">\n                                <h4>Book Details</h4>\n                            </Card.Title>\n                            {/* <hr></hr> */}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n\n                                {/* Disabled */}\n                                {enable &&\n                                    <Row>\n                                        <Col md={6}>\n                                            <Form>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Title</Form.Label>\n                                                    <Form.Control type=\"text\" value={title} onChange={onTitleChange} placeholder=\"Enter Title\" />\n                                                    <p className=\"help-block text-danger\">{titleErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                \n                                                    <Form.Control type=\"hidden\" value={titleTemp} onChange={onTitleChange} placeholder=\"Enter Title\" />\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>ISBN</Form.Label>\n                                                    <Form.Control type=\"number\" value={isbn} onChange={onIsbnChange} placeholder=\"Enter ISBN\" />\n                                                    <p className=\"help-block text-danger\">{isbnErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Price</Form.Label>\n                                                    <Form.Control type=\"number\" value={price} onChange={onPriceChange} placeholder=\"Enter Price\" />\n                                                    <p className=\"help-block text-danger\">{priceErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Publish Date</Form.Label>\n                                                    <Form.Control type=\"text\" value={publishDate}  placeholder=\"Enter Publish Date\" />\n                                                    <p className=\"help-block text-danger\">{publishDateErrorMsg}</p>\n                                                </Form.Group>\n\n                                            </Form>\n                                        </Col>\n\n                                        <Col md={6}>\n\n                                        <Form>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Categoy</Form.Label>\n                                                    <Form.Control onChange={onCategoryChange} value={category} as=\"select\" placeholder=\"Select Category\">\n                                                    <option>Select Category</option>\n                                                    {categories.map(data =>(\n                                                        <option title={data}>{data}</option>\n                                                    ))}\n                                                </Form.Control>\n                                                    <p className=\"help-block text-danger\">{categoryErrorMsg}</p>\n                                                </Form.Group>\n\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Author Name</Form.Label>\n                                                    <Form.Control type=\"text\" value={authors} onChange={onAuthorsChange} placeholder=\"Enter Author Name\" />\n                                                    <p className=\"help-block text-danger\">{authorsErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Discount</Form.Label>\n                                                    <Form.Control type=\"number\" value={discount} onChange={onDiscountChange} placeholder=\"Enter Discount\" />\n                                                    <p className=\"help-block text-danger\">{discountErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Available Stock</Form.Label>\n                                                    <Form.Control type=\"number\" value={available} onChange={onAvailableChange} placeholder=\"Enter Available Stock\" />\n                                                    <p className=\"help-block text-danger\">{availableErrorMsg}</p>\n                                                </Form.Group>\n\n                                            </Form>\n\n                                        </Col>\n                                        \n                                        <Button  style={{ width: \"90px\", margin: 'auto' }} onClick={update} variant=\"primary\">UPDATE</Button>\n                                    </Row>\n                                }\n\n                               \n\n\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.bookReducer.books,\n        authenticated: state.authReducer.authenticated,\n        currentuser:state.userReducer.currentUser,\n        message:state.bookReducer.message\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onUpdate: (title, bookData) => dispatch(bookactions.updatebooks(title, bookData)),\n        onGetBooks: () => dispatch(bookactions.fetchbooks())\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewBook);"],"sourceRoot":""}