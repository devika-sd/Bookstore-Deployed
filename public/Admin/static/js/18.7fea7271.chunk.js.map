{"version":3,"sources":["Admin-part2/Booklist/ViewBook.js"],"names":["getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","padding","spacing","connect","state","books","bookReducer","authenticated","authReducer","currentuser","userReducer","currentUser","message","dispatch","onUpdate","title","bookData","bookactions","onGetBooks","props","id","useParams","history","useHistory","classes","_useState","useState","modalStyle","Object","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","_useState3","_useState4","open","setOpen","_useState5","_useState6","bookid","setBookid","_useState7","_useState8","setTitle","_useState9","_useState10","titleTemp","setTitleTemp","_useState11","_useState12","authors","setAuthors","_useState13","_useState14","publishDate","setPublishDate","_useState15","_useState16","isbn","setIsbn","_useState17","_useState18","price","setPrice","_useState19","_useState20","discount","setDiscount","_useState21","_useState22","category","setCategory","_useState23","_useState24","available","setAvailable","_useState25","_useState26","_useState27","_useState28","setNotify","_useState29","_useState30","enable","setEnable","_useState31","_useState32","setTitleError","_useState33","_useState34","setIsbnError","_useState35","_useState36","setCategoryError","_useState37","_useState38","setAuthorsError","_useState39","_useState40","setPriceError","_useState41","_useState42","setDiscountError","_useState43","_useState44","setAvailableError","_useState45","_useState46","_useState47","_useState48","titleErrorMsg","setTitleErrorMsg","_useState49","_useState50","isbnErrorMsg","setIsbnErrorMsg","_useState51","_useState52","categoryErrorMsg","setCategoryErrorMsg","_useState53","_useState54","authorsErrorMsg","setAuthorsErrorMsg","_useState55","_useState56","priceErrorMsg","setPriceErrorMsg","_useState57","_useState58","discountErrorMsg","setDiscountErrorMsg","_useState59","_useState60","availableErrorMsg","setAvailableErrorMsg","_useState61","_useState62","publishDateErrorMsg","handleClose","push","useEffect","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_devik_Desktop_admin_Final_app_master_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","publishedDate","wrap","_context","prev","next","_id","Date","toLocaleDateString","stop","update","_ref2","_callee2","event","_context2","_x","apply","this","arguments","onTitleChange","titleValue","target","value","RegExp","test","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","_material_ui_core_Modal__WEBPACK_IMPORTED_MODULE_4__","aria-labelledby","aria-describedby","style","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","margin","boxSizing","border","fontFamily","display","Header","float","fontSize","onClick","Title","as","Body","Text","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","md","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","Group","controlId","Label","Control","type","onChange","placeholder","length","map","data","authorsValue","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","variant"],"mappings":"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","file":"static/js/18.7fea7271.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap'\nimport { useParams } from \"react-router-dom\"\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router\";\n\n\nimport * as bookactions from '../../Actions/book-action';\n\n\nfunction getModalStyle() {\n    return {\n        top: `50%`,\n        left: `50%`,\n        transform: `translate(-50%, -50%)`,\n    };\n}\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: '1000px',\n        padding: theme.spacing(2, 4, 3)\n    },\n}));\n\n\n\nfunction ViewBook(props) {\n    let { id } = useParams();\n    const history = useHistory();\n    const classes = useStyles();\n    var [modalStyle] = useState(getModalStyle);\n    var [open, setOpen] = useState(true);\n    const [bookid,setBookid] = useState('');\n    const [title, setTitle] = useState('');\n    const [titleTemp, setTitleTemp] = useState('');\n    const [authors, setAuthors] = useState('');\n    const [publishDate, setPublishDate] = useState('');\n    const [isbn, setIsbn] = useState('');\n    const [price, setPrice] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [category, setCategory] = useState('');\n    const [available, setAvailable] = useState('');\n    const [status, setStatus] = useState(\"new\");\n    const [notify,setNotify] = useState(false);\n\n    const [enable, setEnable] = useState(true)\n    const [titleError, setTitleError] = useState(true)\n    const [isbnError, setIsbnError] = useState(true)\n    const [categoryError, setCategoryError] = useState(true)\n    const [authorsError, setAuthorsError] = useState(true)\n    const [priceError, setPriceError] = useState(true)\n    const [discountError, setDiscountError] = useState(true)\n    const [availableError, setAvailableError] = useState(true)\n    const [publishDateError, setPublishdateError] = useState(true)\n    const [titleErrorMsg, setTitleErrorMsg] = useState('')\n    const [isbnErrorMsg, setIsbnErrorMsg] = useState('')\n    const [categoryErrorMsg, setCategoryErrorMsg] = useState('')\n    const [authorsErrorMsg, setAuthorsErrorMsg] = useState('')\n    const [priceErrorMsg, setPriceErrorMsg] = useState('')\n    const [discountErrorMsg, setDiscountErrorMsg] = useState('')\n    const [availableErrorMsg, setAvailableErrorMsg] = useState('')\n    const [publishDateErrorMsg, setPublishdateErrorMsg] = useState('')\n    const categories= [\"horror\", \"comedy\", \"adeventure\", \"fiction\", \"ancient\", \"sciencefiction\", \"thriller\", \"spritual\", \"classic\" ]\n   \n\n    const handleopen = () => {\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n        setNotify(false);\n        history.push('/showbook');\n\n    }\n\n    const checkClose = () => {\n        handleClose();\n    }\n   \n    useEffect(() => {\n        (async () => {\n            await props.onGetBooks();\n           \n           // let date = new Date(props.books[0].publishDate);\n//date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n         //   console.log(\"jjjj \"+date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate())\n            setBookid(props.books[id]._id)\n            setTitle(props.books[id].title)\n            setTitleTemp(props.books[id].title)\n            setCategory(props.books[id].category)\n            setIsbn(props.books[id].isbn)\n            setPrice(props.books[id].price)\n            setDiscount(props.books[id].discount)\n            setAvailable(props.books[id].available)\n           // var d = new Date(date.getFullYear(), (date.getMonth()+1), date.getDate());\n            var publishedDate = new Date(props.books[id].publishDate)\n            setPublishDate(publishedDate.toLocaleDateString())\n            setAuthors(props.books[id].authors)\n            \n        })();\n\n\n\n       \n    }, [id,id])\n    var check = true;\n    const update = async (event) => {\n        setNotify(true);\n   \n        let bookData = { title, category, authors, isbn, price, discount, available, publishDate}\n        if(titleTemp === null){\n        props.onUpdate(bookid, bookData)\n        } else{\n            props.onUpdate(bookid, bookData)\n        }\n        setEnable(true)\n    }\n\n    const Edit = (event) => {\n        console.log('Edit')\n        setEnable(false)\n    }\n    const cancel = (event) =>{\n        console.log('cancel')\n        setEnable(true)\n        handleClose();\n    }\n\n    const onChangeRadio = (e) => {\n        console.log(e.target.value);\n        setStatus(e.target.value);\n    }\n    const onTitleChange = (event) => {\n        var titleValue = (event.target.value)\n        const expression = new RegExp('[a-zA-Z\\s]{2,20}')\n        \n        if (!(expression.test(titleValue))) {\n            setTitle(titleValue)\n            setTitleError(false)\n    \n            setTitleErrorMsg('please enter a valid book title');\n        }\n        else {\n            setTitle(titleValue)\n            setTitleError(true)\n            setTitleErrorMsg('');\n            check = false;\n        }\n    }\n\n    const onCategoryChange = (event) => {\n        var value = (event.target.value)\n         \n        if (value===\"\") {\n            setCategory(value)\n            setCategoryError(false)\n            setCategoryErrorMsg('please enter a valid category');\n        }\n        else {\n            setCategory(value)\n            setCategoryError(true)\n            setCategoryErrorMsg('');\n            check = false;\n        }\n    }\n\n    const onAuthorsChange = (event) => {\n        var authorsValue = (event.target.value)\n        const expression = new RegExp('[a-zA-Z\\s]{4,20}')\n        \n        if (!(expression.test(authorsValue))) {\n            setAuthors(authorsValue)\n            setAuthorsError(false)\n            setAuthorsErrorMsg('please enter a valid author name')\n        }\n        else {\n            setAuthors(authorsValue)\n            setAuthorsError(true)\n            check = false;\n            setAuthorsErrorMsg('')\n        }\n    }\n\n    const onIsbnChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value.length >13 || value.length<10) {\n            setIsbn(value)\n            setIsbnError(false)\n            setIsbnErrorMsg('isbn number should be 10 to 13 digits long')\n        }\n        else {\n            setIsbn(value)\n            setIsbnError(true)\n            setIsbnErrorMsg('')\n            check = false;\n        }\n    }\n\n    const onPriceChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<=0) {\n            setPrice(value)\n            setPriceError(false)\n            setPriceErrorMsg('Price should be greater than 0')\n        }\n        else {\n            setPrice(value)\n            setPriceError(true)\n            setPriceErrorMsg('')\n            check = false;\n        }\n    }\n\n    \n    const onAvailableChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<0) {\n            setAvailable(value)\n            setAvailableError(false)\n            setAvailableErrorMsg('Availability should be a positive number')\n        }\n        else {\n            setAvailable(value)\n            setAvailableError(true)\n            setAvailableErrorMsg('')\n            check = false;\n        }\n    }\n\n    const onDiscountChange = (event) => {\n        var value = (event.target.value)\n        \n        if (value<0 || value > 50) {\n            setDiscount(value)\n            setDiscountError(false)\n            setDiscountErrorMsg('Discount should be less than 50')\n        }\n        else {\n            setDiscount(value)\n            setDiscountError(true)\n            setDiscountErrorMsg('')\n            check = false;\n        }\n    }\n   \n        \n    return (\n        <div>\n            {/* {props.message.includes('updated')&&notify ? <Notification open={true} variant='success' msg={props.message}/> : null} */}\n            \n            {/* {props.message.includes('Book details not updated') ? <Notification open={true} variant='error' msg={props.message}/> : null}\n                 {props.message.includes('Book details updated successfully') ? <Notification open={true} variant=\"success\" msg={props.message}/> : null}\n                 {props.message.includes('authors') ? <Notification open={true} variant=\"success\" msg={\"Author Name should be at least 4 Character Long\"}/> : null}\n              */}\n            <Modal\n                open={open}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n            >\n                <div style={modalStyle} className={classes.paper+' ordermodel'}>\n                    <Card className=\"border border-muted\" style={{\n                        padding: '10px 15px',\n                        margin: '15px auto',\n                        boxSizing: 'border-box',\n                        border: 'none',\n                        width: '90%',\n                        fontFamily: 'monospace',\n                        display: 'block'\n                    }}>\n\n                        <Card.Header>\n                            <i className=\"fa fa-times\" style={{ float: 'right', fontSize: '20px' }} onClick={checkClose}></i>\n                            <Card.Title as=\"h5\">\n                                <h4>Book Details</h4>\n                            </Card.Title>\n                            {/* <hr></hr> */}\n                        </Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n\n                                {/* Disabled */}\n                                {enable &&\n                                    <Row>\n                                        <Col md={6}>\n                                            <Form>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Title</Form.Label>\n                                                    <Form.Control type=\"text\" value={title} onChange={onTitleChange} placeholder=\"Enter Title\" />\n                                                    <p className=\"help-block text-danger\">{titleErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                \n                                                    <Form.Control type=\"hidden\" value={titleTemp} onChange={onTitleChange} placeholder=\"Enter Title\" />\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>ISBN</Form.Label>\n                                                    <Form.Control type=\"number\" value={isbn} onChange={onIsbnChange} placeholder=\"Enter ISBN\" />\n                                                    <p className=\"help-block text-danger\">{isbnErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Price</Form.Label>\n                                                    <Form.Control type=\"number\" value={price} onChange={onPriceChange} placeholder=\"Enter Price\" />\n                                                    <p className=\"help-block text-danger\">{priceErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Publish Date</Form.Label>\n                                                    <Form.Control type=\"text\" value={publishDate}  placeholder=\"Enter Publish Date\" />\n                                                    <p className=\"help-block text-danger\">{publishDateErrorMsg}</p>\n                                                </Form.Group>\n\n                                            </Form>\n                                        </Col>\n\n                                        <Col md={6}>\n\n                                        <Form>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Categoy</Form.Label>\n                                                    <Form.Control onChange={onCategoryChange} value={category} as=\"select\" placeholder=\"Select Category\">\n                                                    <option>Select Category</option>\n                                                    {categories.map(data =>(\n                                                        <option title={data}>{data}</option>\n                                                    ))}\n                                                </Form.Control>\n                                                    <p className=\"help-block text-danger\">{categoryErrorMsg}</p>\n                                                </Form.Group>\n\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Author Name</Form.Label>\n                                                    <Form.Control type=\"text\" value={authors} onChange={onAuthorsChange} placeholder=\"Enter Author Name\" />\n                                                    <p className=\"help-block text-danger\">{authorsErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Discount</Form.Label>\n                                                    <Form.Control type=\"number\" value={discount} onChange={onDiscountChange} placeholder=\"Enter Discount\" />\n                                                    <p className=\"help-block text-danger\">{discountErrorMsg}</p>\n                                                </Form.Group>\n                                                <Form.Group controlId=\"formBasicEmail\">\n                                                    <Form.Label>Available Stock</Form.Label>\n                                                    <Form.Control type=\"number\" value={available} onChange={onAvailableChange} placeholder=\"Enter Available Stock\" />\n                                                    <p className=\"help-block text-danger\">{availableErrorMsg}</p>\n                                                </Form.Group>\n\n                                            </Form>\n\n                                        </Col>\n                                        \n                                        <Button  style={{ width: \"90px\", margin: 'auto' }} onClick={update} variant=\"primary\">UPDATE</Button>\n                                    </Row>\n                                }\n\n                               \n\n\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        books: state.bookReducer.books,\n        authenticated: state.authReducer.authenticated,\n        currentuser:state.userReducer.currentUser,\n        message:state.bookReducer.message\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onUpdate: (title, bookData) => dispatch(bookactions.updatebooks(title, bookData)),\n        onGetBooks: () => dispatch(bookactions.fetchbooks())\n\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewBook);"],"sourceRoot":""}